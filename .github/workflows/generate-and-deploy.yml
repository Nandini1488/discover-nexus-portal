# This workflow generates news content and deploys it to GitHub Pages.
# It's configured to run every 6 hours to provide more frequent updates.

name: Generate & Deploy News Content

on:
  # Trigger the workflow on pushes to the 'main' branch.
  # This is useful for initial setup and debugging.
  push:
    branches:
      - main
  
  # Schedule the workflow to run every 6 hours (at minute 0 of hours 0, 6, 12, 18 UTC).
  # This provides more frequent updates while trying to manage API limits.
  schedule:
    - cron: '0 */6 * * *' # Runs at 00:00, 06:00, 12:00, 18:00 UTC daily

  # Allows manual triggering from the GitHub Actions tab in the repository.
  workflow_dispatch:

# Grant necessary permissions for the GITHUB_TOKEN to write to the repository.
# This is required for the workflow to commit the generated 'updates.json' file.
permissions:
  contents: write # Grants write access to the repository contents

jobs:
  generate_and_deploy:
    runs-on: ubuntu-latest # Specifies the operating system for the job

    steps:
      # Step 1: Checkout the repository code.
      # This action fetches your repository's code into the runner environment.
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python environment.
      # Configures Python on the runner, ensuring 'requests' can be installed.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x' # Uses the latest Python 3 version available

      # Step 3: Install Python dependencies.
      # Installs the 'requests' library, which your Python script uses for API calls.
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip # Upgrades pip to the latest version
          pip install requests # Installs the 'requests' library

      # Step 4: Generate content using the Python script.
      # Executes your 'generate_content.py' script.
      # The MISTRAL_API_KEY is securely passed as an environment variable from GitHub Secrets.
      - name: Generate content
        run: python scripts/generate_content.py
        env:
          # This variable name (MISTRAL_API_KEY) must EXACTLY match the name your Python script expects
          # and the name of your GitHub Secret.
          MISTRAL_API_KEY: ${{ secrets.MISTRAL_API_KEY }}

      # Step 5: Commit and Push changes to the repository.
      # This step adds the newly generated 'updates.json' file, commits it,
      # and pushes the changes back to the 'main' branch.
      - name: Commit and Push changes
        run: |
          # Exit immediately if any command fails
          set -e

          # Debug: List file to confirm it exists and its size
          echo "--- Debugging updates.json before commit ---"
          ls -l updates.json
          # Debug: Print first few lines of updates.json to check content
          head -n 20 updates.json
          echo "--- End debugging updates.json ---"

          # Configure Git user details for the commit.
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          # Add the 'updates.json' file to the Git staging area.
          git add updates.json
          
          # Commit the changes. The '|| true' part (instead of || echo)
          # ensures the step doesn't fail if there are no changes, but still
          # allows 'set -e' to catch other errors.
          git commit -m "Update news content data" || true
          
          # Push the committed changes to the 'main' branch.
          # Use GITHUB_TOKEN for authentication and explicitly push to main.
          git push origin main
